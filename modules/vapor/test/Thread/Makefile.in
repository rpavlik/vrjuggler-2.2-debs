# ***************** <VPR heading BEGIN do not edit this line> *****************
#
# VR Juggler Portable Runtime
#
# Original Authors:
#   Allen Bierbaum, Patrick Hartling, Kevin Meinert, Carolina Cruz-Neira
#
# ****************** <VPR heading END do not edit this line> ******************

# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998-2007 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# -----------------------------------------------------------------------------
# Makefile.in for vapor/vpr/test/Thread
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

# Generated by mkmakefile.pl using the following options:
#    --apps test=test.cpp --apps stlTest=stlTest.cpp --apps
#    testPool=testPool.cpp --apps
#    testSelfPerformance=testSelfPerformance.cpp --apps
#    testTSD_Performance=testTSD_Performance.cpp

default: all

# Basic options.
srcdir		= @srcdir@
CFLAGS		= @APP_CFLAGS@ $(EXTRA_CFLAGS) $(INCLUDES) $(DEFS)
CXXFLAGS	= @APP_CXXFLAGS@ $(EXTRA_CFLAGS) $(INCLUDES) $(DEFS)
DEFS		= @APP_DEFS@
EXTRA_CFLAGS	= @APP_EXTRA_CFLAGS@ $(DEBUG_CFLAGS)
DEBUG_CFLAGS	= @APP_DEBUG_CFLAGS@
OPTIM_CFLAGS	= @APP_OPTIM_CFLAGS@
INCLUDES	= @APP_INCLUDES@ @BOOST_INCLUDES@ -I$(srcdir)
EXTRA_LFLAGS	= @APP_EXTRA_LFLAGS@ $(DEBUG_LFLAGS)
DEBUG_LFLAGS	= @APP_DEBUG_LFLAGS@
OPTIM_LFLAGS	= @APP_OPTIM_LFLAGS@
LINK_FLAGS	= @APP_LINK_FLAGS@ $(EXTRA_LFLAGS)
LINKALL_ON	= @APP_LINKALL_ON@
LINKALL_OFF	= @APP_LINKALL_OFF@

# Libraries needed for linking.
BASIC_LIBS	= @APP_BASIC_LIBS_BEGIN@ @APP_BASIC_LIBS@  @APP_BASIC_EXT_LIBS@ @APP_BASIC_LIBS_END@
EXTRA_LIBS	= @APP_EXTRA_LIBS_BEGIN@ @APP_EXTRA_LIBS@  @APP_EXTRA_LIBS_END@  -lm

# Commands to execute.
C_COMPILE	= @APP_CC@ $(CFLAGS)
CXX_COMPILE	= @APP_CXX@ $(CXXFLAGS)
LINK		= @APP_LINK@ $(LINK_FLAGS)

VPATH	= @srcdir@

stlTest_OBJS	= stlTest.@OBJEXT@

test_OBJS	= test.@OBJEXT@

testPool_OBJS	= testPool.@OBJEXT@

testSelfPerformance_OBJS	= testSelfPerformance.@OBJEXT@

testTSD_Performance_OBJS	= testTSD_Performance.@OBJEXT@

# -----------------------------------------------------------------------------
# Application build targets.
# -----------------------------------------------------------------------------
all: stlTest@EXEEXT@ test@EXEEXT@ testPool@EXEEXT@ testSelfPerformance@EXEEXT@ testTSD_Performance@EXEEXT@

stlTest@EXEEXT@: $(stlTest_OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(stlTest_OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

test@EXEEXT@: $(test_OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(test_OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

testPool@EXEEXT@: $(testPool_OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(testPool_OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

testSelfPerformance@EXEEXT@: $(testSelfPerformance_OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(testSelfPerformance_OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

testTSD_Performance@EXEEXT@: $(testTSD_Performance_OBJS)
	$(LINK) @EXE_NAME_FLAG@ $(testTSD_Performance_OBJS) $(BASIC_LIBS) $(EXTRA_LIBS)

# Suffix rules for building object files.
.SUFFIXES: .cpp .@OBJEXT@

.cpp.@OBJEXT@:
	$(CXX_COMPILE) @OBJ_NAME_FLAG@ @OBJ_BUILD_FLAG@ $<

# -----------------------------------------------------------------------------
# Clean-up targets.
# -----------------------------------------------------------------------------
clean:
	rm -f Makedepend *.@OBJEXT@ stlTest.ilk test.ilk testPool.ilk testSelfPerformance.ilk testTSD_Performance.ilk  so_locations *.?db core*
	rm -rf ii_files

clobber:
	@$(MAKE) clean
	rm -f stlTest@EXEEXT@ test@EXEEXT@ testPool@EXEEXT@ testSelfPerformance@EXEEXT@ testTSD_Performance@EXEEXT@ 
