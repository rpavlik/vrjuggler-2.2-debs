# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998-2007 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# -----------------------------------------------------------------------------
# Makefile.in for vrjuggler/vrjconfig.  It requires GNU make.
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

default: all

ifndef NO_JAVA
   BUILD_JAVA=	@BUILD_JAVA@
else
   BUILD_JAVA=	N
endif

# Include common definitions.
include @topdir@/make.defs.mk
include @topdir@/java.defs.mk

instlinks=		$(topdir)/instlinks
srcdir=			@srcdir@
top_srcdir=		@top_srcdir@

bundle_tweek_beandir=	$(bundle_javadir)/share/tweek/beans
bundle_tweek_javadir=	$(bundle_javadir)/share/tweek/java
bundle_jccl_beandir=	$(bundle_javadir)/share/jccl/beans
bundle_jccl_datadir=	$(bundle_javadir)/share/jccl/data
bundle_jccl_javadir=	$(bundle_javadir)/share/jccl/java
bundle_vrj_datadir=	$(bundle_javadir)/share/vrjuggler/data

ARCH=			$(shell uname -p)

TWEEK_EXT_JARS=		@TWEEK_EXT_JARS@

TWEEK_JAR_DIR=		@vrjconfig_bundle_tweek_jardir@
TWEEK_BEAN_DIR=		@vrjconfig_bundle_tweek_beandir@
JCCL_DATA_DIR=		@vrjconfig_bundle_jccl_datadir@
JCCL_JAR_DIR=		@vrjconfig_bundle_jccl_jardir@
JCCL_BEAN_DIR=		@vrjconfig_bundle_jccl_beandir@

INSTALL=		@INSTALL@

JARS=	
BEANS=	VRJConfig

@SET_MAKE@

all world world-all-abi release:
	@$(MAKE) buildworld
	@$(MAKE) installworld

# -----------------------------------------------------------------------------
# Uses ant to build the java classes and JARs
# -----------------------------------------------------------------------------
debug dbg dbg-dso optim opt opt-dso profiled prof prof-dso buildworld:
ifeq ($(BUILD_JAVA), Y)
	@echo "------------------------------------------------"
	@echo "Building VRJConfig foundational code"
	@echo "------------------------------------------------"
	@$(MAKE) -C commoneditors commoneditors
	@$(MAKE) -C customeditors customeditors
	@$(MAKE) -C wizards wizards
	$(ANT)
	@$(MAKE) links
else
	@echo "------------------------------------------------"
	@echo "VRJConfig build skipped"
	@echo "------------------------------------------------"
endif

links:
	@$(MAKE) EXTRA_INSTALL_ARGS=-l prefix="$(instlinks)" installworld

# -----------------------------------------------------------------------------
# Installation targets.
# -----------------------------------------------------------------------------

install-debug install-optim install-profiled installworld:
ifeq ($(BUILD_JAVA), Y)
	@$(MAKE) do-install
else
	@echo "------------------------------------------------"
	@echo "VRJConfig install skipped"
	@echo "------------------------------------------------"
endif

do-install:
	@echo "------------------------------------------------"
	@echo "Installing the VRJConfig code base"
	@echo "------------------------------------------------"
ifeq (@OS_TYPE@, UNIX)
	$(INSTALL) -m $(EXEC_PERMS) $(GROUP_OPT_UNIX)			\
          $(EXTRA_INSTALL_ARGS) $(topdir)/vrjconfig.sh $(bindir)/vrjconfig
else
	$(INSTALL) -m $(EXEC_PERMS) $(GROUP_OPT_UNIX)			\
          $(VJROOT_ABS)/vrjconfig.bat $(bindir)/vrjconfig.bat
endif	# if OS_TYPE == UNIX
	$(SHELL) $(MKINSTALLDIRS) $(projdatadir)
ifneq ($(JARS), )
	for jar in $(JARS) ;						\
          do								\
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
                $(EXTRA_INSTALL_ARGS) $(topdir)/$$jar $(javadir) || 	\
		exit 1;							\
          done
endif
ifneq ($(BEANS), )
	for bean in $(BEANS) ;						\
          do								\
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
                $(EXTRA_INSTALL_ARGS) $(topdir)/$$bean.jar		\
                $(beandir) || exit 1 ;					\
	      $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
		$(EXTRA_INSTALL_ARGS)					\
		$(top_srcdir)/$$bean.xml $(beandir) || exit 1;		\
          done
endif
ifeq (@PLATFORM@, Darwin)
	@echo "----------------------------------------------------"
	@echo "Installing the Mac OS X VRJconfig application bundle"
	@echo "----------------------------------------------------"
	$(SHELL) $(MKINSTALLDIRS) $(bundle_bindir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_javadir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_tweek_javadir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_tweek_javadir)/$(ARCH)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_tweek_beandir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_jccl_beandir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_jccl_datadir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_jccl_javadir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_vrj_beandir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_vrj_beandir)/customeditors
	$(SHELL) $(MKINSTALLDIRS) $(bundle_vrj_beandir)/wizards
	$(SHELL) $(MKINSTALLDIRS) $(bundle_vrj_javadir)
	$(SHELL) $(MKINSTALLDIRS) $(bundle_vrj_datadir)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(EXEC_PERMS)		\
          $(releasedir)/mac/JavaApplicationStub $(bundle_bindir)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(topdir)/Info.plist $(bundleroot)/Contents
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(top_srcdir)/vrjconfig.icns $(bundleroot)/Contents/Resources
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(top_srcdir)/jconf.icns $(bundleroot)/Contents/Resources
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(top_srcdir)/../data/ControlPanel.xml $(bundle_vrj_datadir)
	echo 'AAPL????' > $(bundleroot)/Contents/PkgInfo
	/Developer/Tools/SetFile -a B $(bundleroot)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(GROUP_OPT_UNIX) $(TWEEK_JAR_DIR)/java.security.policy.txt	\
          $(bundle_javadir)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(EXEC_PERMS)		\
          $(GROUP_OPT_UNIX) $(TWEEK_JAR_DIR)/$(ARCH)/* $(bundle_javadir)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(TWEEK_JAR_DIR)/*.jar $(bundle_javadir)
	for j in `echo $(TWEEK_EXT_JARS) | sed -e 's/:/ /g'` ;		\
          do								\
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
                $(EXTRA_INSTALL_ARGS) $$j $(bundle_tweek_javadir) || exit 1 ; \
          done
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(TWEEK_BEAN_DIR)/*.jar $(TWEEK_BEAN_DIR)/*.xml		\
          $(bundle_tweek_beandir)
	$(PERL) $(scriptdir)/install-dir.pl -i $(JCCL_DATA_DIR)		\
          -m $(FILE_PERMS) $(GROUP_OPT_UNIX) -o $(bundle_jccl_datadir)	\
          $(EXTRA_INSTALL_ARGS)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(JCCL_JAR_DIR)/*.jar $(bundle_jccl_javadir)
	$(INSTALL) $(EXTRA_INSTALL_ARGS) -m $(FILE_PERMS)		\
          $(JCCL_BEAN_DIR)/*.jar $(JCCL_BEAN_DIR)/*.xml $(bundle_jccl_beandir)
ifneq ($(JARS), )
	for jar in $(JARS) ;						\
          do								\
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
                $(EXTRA_INSTALL_ARGS) $(topdir)/$$jar			\
                $(bundle_vrj_javadir) || exit 1;			\
          done
endif
ifneq ($(BEANS), )
	for bean in $(BEANS) ;						\
          do								\
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
                $(EXTRA_INSTALL_ARGS) $(topdir)/$$bean.jar		\
                $(bundle_vrj_beandir) || exit 1 ;			\
              $(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT_UNIX)		\
                $(EXTRA_INSTALL_ARGS)					\
                $(top_srcdir)/$$bean.xml $(bundle_vrj_beandir) || exit 1 ; \
          done
endif
endif
	@$(MAKE) -C commoneditors install-commoneditors
	@$(MAKE) -C customeditors install-customeditors
	@$(MAKE) -C wizards install-wizards
	
clean clobber:
	$(ANT) clean
	$(MAKE) -C commoneditors clean
	$(MAKE) -C customeditors clean
	$(MAKE) -C wizards clean
ifdef GLOBAL_BUILD
	rm -rf $(top_srcdir)/bin
endif

cleandepend:
