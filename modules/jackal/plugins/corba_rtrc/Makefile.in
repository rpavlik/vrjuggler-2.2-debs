# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# VR Juggler is (C) Copyright 1998-2007 by Iowa State University
#
# Original Authors:
#   Allen Bierbaum, Christopher Just,
#   Patrick Hartling, Kevin Meinert,
#   Carolina Cruz-Neira, Albert Baker
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# *************** <auto-copyright.pl END do not edit this line> ***************

# -----------------------------------------------------------------------------
# Makefile.in for jackal/plugins/corba_rtrc.  It requires GNU make.
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------

default: all

# Include common definitions.
include @topdir@/make.defs.mk

PLUGIN_NAME=		corba_rtrc

srcdir=			@srcdir@
top_srcdir=		@top_srcdir@
EXTRA_INCLUDES+=	-I$(IDL_GENDIR)
EXTRA_SRCS_PATH=	$(srcdir)/idl jccl
INSTALL=		@INSTALL@
INSTALL_FILES=
SUBOBJDIR=		$(PLUGIN_NAME)

ANT=			@ANT@

IDL_GENDIR=		.

CXX_IDL=		@TWEEK_CXX_IDL@
CXX_IDL_OPTS=		@TWEEK_CXX_IDL_OPTS@ @TWEEK_CXX_IDL_GENDIR_OPT@$(IDL_GENDIR)
CXX_IDL_INCLUDES=	@TWEEK_CXX_IDL_INCFLAG@$(top_srcdir)

JAVA_IDL_OPTS=		@TWEEK_JAVA_IDL_OPTS@ @TWEEK_JAVA_IDL_GENDIR_OPT@ $(IDL_GENDIR)
JAVA_IDL_INCLUDES=	@TWEEK_JAVA_IDL_INCFLAG@$(top_srcdir)

HAVE_TWEEK_CXX=		@HAVE_TWEEK_CXX@
ifndef NO_JAVA
   HAVE_TWEEK_JAVA=	@HAVE_TWEEK_JAVA@
endif

ifeq ($(HAVE_TWEEK_CXX), Y)
   EXTRA_CXXFLAGS+=	@TWEEK_CXXFLAGS@
   IDL_CXX_FILES=	RemoteReconfigSubject.cpp RemoteReconfigSubject.h
   base_srcs=		RemoteReconfigSubjectImpl.cpp	\
			CorbaRemoteReconfig.cpp

   # Only include the C++ code generated by the IDL compiler in $(SRCS)
   # when the files actually exist.  We use the $(filter-out ...) function
   # here because the wildcard will return too many files in the case when
   # $(srcdir) == $(IDL_GENDIR).
   idl_srcs=		$(filter-out $(base_srcs), $(notdir $(wildcard $(IDL_GENDIR)/*.cpp)))
   SRCS=		$(base_srcs) $(idl_srcs)

   C_AFTERBUILD=	plugin-dso
endif

ifeq ($(HAVE_TWEEK_JAVA), Y)
   EXTRA_JAVA_SRCS_PATH=jccl

   IDL_JAVA_FILES=	RemoteReconfigSubject.java

   JARS=		jccl_rtrc.jar
   POST_INSTALL=	install-bean
   BEAN_INSTALL_FILES=	$(JARS) $(addprefix $(srcdir)/, $(JARS:.jar=.xml))
   BEAN_INSTALL_PATH=	$(projdatadir)/beans

   AFTERBUILD=		java-build
endif

BEFOREBUILD=		idl-beforebuild

idl-beforebuild:
ifeq ($(HAVE_TWEEK_CXX), Y)
	$(MAKE) DO_IDL=1 cxx_idl
endif
ifeq ($(HAVE_TWEEK_JAVA), Y)
	$(MAKE) DO_IDL=1 java_idl
endif

java-build:
	$(ANT)

install-bean:
	$(INSTALL) -m $(FILE_PERMS) $(GROUP_OPT) $(EXTRA_INSTALL_ARGS)	\
          $(BEAN_INSTALL_FILES) $(BEAN_INSTALL_PATH)

_LOCAL_CLEAN=	_clean

include $(MKPATH)/dpp.obj.mk
include @topdir@/plugin.defs.mk

#PRE_DSO_PLUGIN_DEPS=	@TWEEK_PLUGIN_DEPS@

ifeq ($(HAVE_TWEEK_CXX), Y)
   CLEAN_FILES+=	$(IDL_CXX_FILES)
endif

_clean:
	$(ANT) clean

# -----------------------------------------------------------------------------
# Include dependencies generated automatically.
# -----------------------------------------------------------------------------
ifndef DO_CLEANDEPEND
ifndef DO_IDL
   -include $(DEPEND_FILES)
endif
endif
