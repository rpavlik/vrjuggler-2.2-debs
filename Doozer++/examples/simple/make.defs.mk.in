# =============================================================================
# make.defs.mk.in,v 1.2 2001/01/06 04:31:32 patrick Exp
#
# This is an example file that defines variables that can be used by a whole
# tree of makefiles.  The contents of this file are a subset of that found in
# examples/common.defs.mk.in, and in a real project, this file would be much
# shorter.  It would contain values specific to that project and would include
# common.defs.mk to get all the common variable settings.
#
# Generated for use on @PLATFORM@
# -----------------------------------------------------------------------------
# All makefiles in a source tree should include this file for maximum
# information sharing.
# -----------------------------------------------------------------------------
# Variables defined here are:
#
# bindir        - Path to bin directory containing executables (usually
#                 $(exec_prefix)/bin).
# datadir       - Path to a directory generally sharing platform-independent
#                 data (usually $(prefix)/share).
# exec_prefix   - Path to base directory where executables will be (usually
#                 $(prefix)).
# libdir        - Path to directory containing shared and static libraries
#                 (usually $(exec_prefix)/lib).
# libexecdir    - Path to libexec directory that generally contains
#                 executables not called directly by users (usually
#                 $(exec_prefix)/libexec).
# prefix        - Base path used for installation and other things.
# sbindir       - Path to sbin directory containing executables (usually
#                 $(exec_prefix)/sbin).
# sysconfdir    - System configuration directory (usually $(prefix)/etc).
# topdir        - The top of the build tree.
#
# CC            - Path to C compiler.
# CXX           - Path to C++ compiler.
# CPP           - Command for invoking the C preprocessor.
# CXXCPP        - Command for invoking the C preprocessor used by the C++
#                 compiler.
# CFLAGS        - Flags for $(CC).
# CPPFLAGS      - Flags for $(CPP) and $(CXXCPP).
# CXXFLAGS      - Flags for $(CXX).
# DEFS          - Command-line preprocessor definitions (-Dvariable=value).
# DEP_GEN_FLAG  - Flag passed to the compiler to generate dependencies.
# DEPEND_FLAGS  - Flags passed to makedepend(1) (or equivalent program for
#                 generating dependencies).
# DEPEND_EXTRAS - Flags not recognized by makedepend(1) that may be
#                 necessary in $(CFLAGS) or $(CXXFLAGS).
# INCLUDES      - Additions to the include path (-I/path/to/include).
# LIBS          - Extra external libraries needed at link time.
# LN_S          - Working 'ln -s' command.
# MKPATH        - Path to shared dpp.*.mk file directory.
# OBJEXT        - Suffix for object file names (e.g., "o" or "obj").
# OBJ_NAME_FLAG - Flag passed to the compiler to name an object file.
# OBJDIR        - Path to the directory where the object files will be built.
# OS_TYPE       - Type of the target operating system (UNIX or Win32).
#
# C_COMPILE     - Command for compiling C code.
# CXX_COMPILE   - Command for compiling C++ code.
#
# PLATFORM      - The operating system abbreviation on which the library is
#                 being built.
# =============================================================================

# -----------------------------------------------------------------------------
# Base variables needed by all makefiles.
# -----------------------------------------------------------------------------
bindir		= @bindir@
datadir		= @datadir@
exec_prefix	= @exec_prefix@
libdir		= @libdir@
libexecdir	= @libexecdir@
prefix		= @prefix@
sbindir		= @sbindir@
sysconfdir	= @sysconfdir@
topdir		= @topdir@

CC		= @CC@
CXX		= @CXX@
CPP		= @CPP@
CXXCPP		= @CXXCPP@
CFLAGS		= @CFLAGS@ $(OPTIMIZER) $(EXTRA_CFLAGS)
CPPFLAGS	= @CPPFLAGS@ $(EXTRA_CPPFLAGS)
CXXFLAGS	= @CXXFLAGS@ $(OPTIMIZER) $(EXTRA_CXXFLAGS)
DEFS		= @DEFS@
DEP_GEN_FLAG	= @DEP_GEN_FLAG@
DEPEND_FLAGS	= @DEPEND_FLAGS@ @INCLUDES@ -I$(topdir) $(EXTRA_DEPEND_FLAGS)
DEPEND_EXTRAS	= @DEPEND_EXTRAS@ $(DEFS)
INCLUDES	= @INCLUDES@ -I$(topdir) $(EXTRA_INCLUDES)
INSTALL		= @INSTALL@
LIBS		= @LIBS@
LN_S		= @LN_S@
MKPATH		?=
OBJEXT		= @OBJEXT@
OBJ_NAME_FLAG	= @OBJ_NAME_FLAG@
OS_TYPE		= @OS_TYPE@

# SGI-specific dynamic-shared-object information.
DSOREGFILE	= @DSOREGFILE@
DSOVERSION	= @DSOVERSION@
DSOVERSIONOPTS	= @DSOVERSIONOPTS@

# Allow overriding the default value of $(OBJDIR) by setting $(BASE_OBJDIR)
# (probably using an externally defined value).
ifdef BASE_OBJDIR
    OBJDIR	= $(BASE_OBJDIR)
else
    OBJDIR	= .
endif

# -----------------------------------------------------------------------------
# Compiler command lines.
# -----------------------------------------------------------------------------
C_COMPILE	= $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
CXX_COMPILE	= $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)

@SET_MAKE@
